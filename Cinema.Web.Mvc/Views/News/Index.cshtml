@model PaginatedList<Cinema.Dto.ViewModels.News.NewsIndexVM>

@{
    ViewData["Title"] = "Index";
}
<div class="section section-header bg-primary bg-size-cover overlay-dark text-white" data-background="img/event.jpg" style="background-image: url('img/event.jpg');">
    <div class="container">
        <div class="row">
            <div class="col-md-12">
                <h1>
                    News
                    <a asp-roles="@Roles.ContentEditor,@Roles.Administrator"  class="btn btn-white btn-sm" asp-action="Create">Add New</a>
                </h1>
            </div>
        </div>
    </div>
</div>

<div class="section section-md">
    <div class="container">
            <div class="row">
                <div class="col-md-12">
                    <form asp-action="Index" method="get" class="row pb-5">
                        <div class="col-12 col-lg-4">
                            <div class="form-group mb-lg-0">
                                <div class="input-group input-group-md mb-lg-0">
                                    <div class="input-group-prepend"><span class="input-group-text"><i class="fas fa-search"></i></span></div>
                                    <input id="search-event" type="text" value="@Model.CurrentFilter" name="SearchString" class="form-control autocomplete" placeholder="Search event">
                                </div>
                            </div>
                        </div>
                        <div class="col-12 col-lg-2">
                            <button class="btn btn-primary btn-block mt-md-0 animate-up-2" type="submit">Search</button>
                        </div>
                        <div class="col-12 col-lg-2">
                            <a class="btn btn-xs" asp-action="Index">Back to Full List</a>
                        </div>
                    </form>
                    <div class="table-responsive">
                        <table class="table table-striped">
                            <thead>
                                <tr>
                                    <th>
                                        <a asp-action="Index" asp-route-sortOrder="@Model.CurrentSortOrder" asp-route-sortProperty="Title" asp-route-currentFilter="@Model.CurrentFilter">@Html.DisplayNameFor(model => model[0].Title)</a>
                                    </th>
                                    <th>
                                        <a asp-action="Index" asp-route-sortOrder="@Model.CurrentSortOrder" asp-route-sortProperty="DateCreated" asp-route-currentFilter="@Model.CurrentFilter">@Html.DisplayNameFor(model => model[0].DateCreated)</a>
                                    </th>
                                    <th>
                                        <a asp-action="Index" asp-route-sortOrder="@Model.CurrentSortOrder" asp-route-sortProperty="TimeCreated" asp-route-currentFilter="@Model.CurrentFilter">@Html.DisplayNameFor(model => model[0].TimeCreated)</a>
                                    </th>
                                    <th>
                                        <a asp-action="Index" asp-route-sortOrder="@Model.CurrentSortOrder" asp-route-sortProperty="Description" asp-route-currentFilter="@Model.CurrentFilter">@Html.DisplayNameFor(model => model[0].Description)</a>
                                    </th>
                                    <th>
                                        <a asp-action="Index" asp-route-sortOrder="@Model.CurrentSortOrder" asp-route-sortProperty="Type" asp-route-currentFilter="@Model.CurrentFilter">@Html.DisplayNameFor(model => model[0].Type.Name)</a>
                                    </th>
                                    <th></th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model)
                                {
                                    <tr>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.Title)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.DateCreated)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.TimeCreated)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.Description)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.Type.Name)
                                        </td>

                                        <td style="min-width:200px;">
                                            <a asp-action="Details" asp-route-id="@item.Id" class="text-dark" data-toggle="tooltip" title="" data-original-title="News details"><i class="far fa-eye mr-2"></i></a>
                                            <a asp-authorize asp-roles="@Roles.ContentEditor,@Roles.Administrator" asp-action="Edit" asp-route-id="@item.Id" class="text-dark" data-toggle="tooltip" title="" data-original-title="Edit news"><i class="far fa-edit mr-2"></i></a>
                                            <a asp-authorize asp-roles="@Roles.ContentEditor,@Roles.Administrator" asp-action="Delete" asp-route-id="@item.Id" class="text-danger"><i class="far fa-trash-alt" data-original-title="Delete news" title=""></i></a>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-12">
                    @{
                        var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
                        var nextDisabled = !Model.HasNextPage ? "disabled" : "";
                    }

                    <a asp-action="Index"
                       asp-route-sortOrder="@Model.CurrentSortOrder"
                       asp-route-sortProperty="@Model.CurrentSort"
                       asp-route-pageNumber="@(Model.PageIndex - 1)"
                       asp-route-currentFilter="@Model.CurrentFilter"
                       class="btn btn-default @prevDisabled">
                        Previous
                    </a>
                    <a asp-action="Index"
                       asp-route-sortOrder="@Model.CurrentSortOrder"
                       asp-route-sortProperty="@Model.CurrentSort"
                       asp-route-pageNumber="@(Model.PageIndex + 1)"
                       asp-route-currentFilter="@Model.CurrentFilter"
                       class="btn btn-default @nextDisabled">
                        Next
                    </a>
                </div>
            </div>
    </div>
</div>